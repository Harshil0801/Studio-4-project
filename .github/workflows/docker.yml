name: Deploy Express App with PM2 and Run ZAP Scan

on:
  push:
    branches:
      - main

jobs:
  # -----------------------
  # ðŸš€ DEPLOY EXPRESS APP
  # -----------------------
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install SSH & SSHPass
        run: sudo apt-get install -y sshpass

      - name: Debug SSH Variables
        run: |
          echo "Server Host: ${{ secrets.SERVER_HOST }}"
          echo "Server User: ${{ secrets.SERVER_USER }}"

      - name: Transfer Files to Server
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        run: |
          sshpass -p "$SERVER_PASSWORD" ssh -tt -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST << 'EOF'
            echo "âœ… Connected to $SERVER_HOST"
            sudo npm install -g pm2 || true
            sudo mkdir -p /var/www/my-web-app
            cd /var/www/my-web-app
            npx pm2 stop my-web-app || true
            sudo rm -rf /var/www/my-web-app/* || true
            exit
          EOF

          # âœ… Correctly copy from GitHub workspace
          sshpass -p "$SERVER_PASSWORD" scp -r ./ $SERVER_USER@$SERVER_HOST:/var/www/my-web-app/

      - name: Install Dependencies and Restart App
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        run: |
          sshpass -p "$SERVER_PASSWORD" ssh -tt -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST << 'EOF'
            echo "ðŸš€ Installing Dependencies and Starting App"
            cd /var/www/my-web-app
            npm install --production
            PORT=3000 npx pm2 start app.js --name my-web-app || npx pm2 restart my-web-app
            npx pm2 save
            exit
          EOF

  # -----------------------
  # ðŸ”Ž RUN OWASP ZAP SCAN
  # -----------------------
  zap-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Debug Environment
        run: |
          echo "Operating System: $(uname -a)"
          echo "Runner Version: $RUNNER_VERSION"

      - name: Install Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          docker --version

      - name: Run OWASP ZAP Full Scan
        run: |
          docker pull zaproxy/zap-stable
          docker run -v $(pwd):/zap/wrk/:rw -t zaproxy/zap-stable zap-full-scan.py -t http://${{ secrets.SERVER_HOST }}/ -J zap-report.json
