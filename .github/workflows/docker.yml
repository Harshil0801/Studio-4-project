name: Deploy Express App with PM2 and Run ZAP Scan

on:
  push:
    branches:
      - main

jobs:
  # -----------------------
  # ðŸš€ DEPLOY EXPRESS APP
  # -----------------------
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # âœ… Install SSH and SSHPass for secure file transfer
      - name: Install SSH & SSHPass
        run: sudo apt-get install -y sshpass

      # âœ… Debug SSH Variables (optional for troubleshooting)
      - name: Debug SSH Variables
        run: |
          echo "Server Host: ${{ secrets.SERVER_HOST }}"
          echo "Server Username: ${{ secrets.SERVER_USERNAME }}"

      # âœ… Transfer Files to the Server
      - name: Transfer Files to Server
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        run: |
          sshpass -p "$SERVER_PASSWORD" ssh -tt -o StrictHostKeyChecking=no $SERVER_USERNAME@$SERVER_HOST << 'EOF'
            echo "âœ… Successfully connected to $SERVER_HOST"
            # Ensure PM2 is installed globally
            sudo npm install -g pm2 || true
            # Create or navigate to project directory
            sudo mkdir -p /var/www/express-app
            cd /var/www/express-app
            # Stop PM2 process if running
            npx pm2 stop subway-app || true
            # Remove old files safely
            sudo rm -rf /var/www/express-app/* || true
            exit
          EOF
          # Securely copy new files from GitHub to the server
          sshpass -p "$SERVER_PASSWORD" scp -r * $SERVER_USERNAME@$SERVER_HOST:/var/www/express-app/

      # âœ… Install Dependencies and Restart App
      - name: Install Dependencies and Restart App
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        run: |
          sshpass -p "$SERVER_PASSWORD" ssh -tt -o StrictHostKeyChecking=no $SERVER_USERNAME@$SERVER_HOST << 'EOF'
            echo "ðŸš€ Installing Dependencies and Restarting PM2..."
            # Go to project folder
            cd /var/www/express-app
            # Install production dependencies
            npm install --production
            # Start or restart the app with PM2
            npx pm2 start app.js --name subway-app || npx pm2 restart subway-app
            # Save PM2 process list to survive reboots
            npx pm2 save
            exit
          EOF

  # -----------------------
  # ðŸ”Ž RUN OWASP ZAP SCAN
  # -----------------------
  zap-scan:
   runs-on: ubuntu-latest

   steps:
    - name: Debug Environment
      run: |
        echo "Operating System: $(uname -a)"
        echo "Runner Version: $RUNNER_VERSION"
    # Install Docker using the official script to avoid dependency issues
    - name: Install Docker
      run: |
        curl -fsSL https://get.docker.com -o get-docker.sh
        sudo sh get-docker.sh
        docker --version
    # Run OWASP ZAP Full Scan using the correct image
    - name: Run OWASP ZAP Full Scan
      run: |
        docker pull zaproxy/zap-stable
        docker run -v $(pwd):/zap/wrk/:rw -t zaproxy/zap-stable zap-full-scan.py -t http://${{ secrets.SERVER_HOST }}/ -J zap-report.json
