name: Deploy Express App with PM2 and Run ZAP Scan

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install SSH & SSHPass
        run: sudo apt-get install -y sshpass

      - name: Debug SSH Variables
        run: |
          echo "Server Host: ${{ secrets.SERVER_HOST }}"
          echo "Server User: ${{ secrets.SERVER_USER }}"
      - name: Transfer Files to Server
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        run: |
          echo "ðŸ“¦ Uploading files to the server..."
          sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST << 'EOF'
            echo "ðŸ§¹ Cleaning old files..."
            sudo rm -rf /var/www/my-web-app
            mkdir -p /var/www/my-web-app
            exit
          EOF
          echo "ðŸš€ Uploading project files..."
            sshpass -p "$SERVER_PASSWORD" scp -r . $SERVER_USER@$SERVER_HOST:/var/www/my-web-app/
      - name: Install Dependencies and Restart App
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          DB_HOST: localhost
          DB_USER: root
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: your_db_name
        run: |
          sshpass -p "$SERVER_PASSWORD" ssh -tt -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST << EOF
            echo "ðŸš€ Installing Dependencies and Starting App"
            cd /var/www/my-web-app
            npm install --production
            export DB_HOST=$DB_HOST
            export DB_USER=$DB_USER
            export DB_PASSWORD=$DB_PASSWORD
            export DB_NAME=$DB_NAME
            export PORT=3000
            pm2 start app.js --name my-web-app || pm2 restart my-web-app
            pm2 save
            exit
          EOF
  zap-scan:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Debug Environment
        run: |
          echo "Operating System: $(uname -a)"
          echo "Runner Version: $RUNNER_VERSION"
      - name: Install Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          docker --version
      - name: Run OWASP ZAP Full Scan
        run: |
          docker pull zaproxy/zap-stable
          docker run -v $(pwd):/zap/wrk/:rw -t zaproxy/zap-stable zap-full-scan.py \
            -t http://${{ secrets.SERVER_HOST }}:3000/ \
            -J zap-report.json \
            -r zap-html-report.html
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap-html-report.html
